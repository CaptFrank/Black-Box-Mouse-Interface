.TH "EMULATION_DEVICE" 3 "Thu Aug 15 2013" "Version 1.0" "Arduino Medical Assitive Device Base Station" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EMULATION_DEVICE \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Emulation_Device_Implementation\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBemulate_usb\fP ()"
.br
.RI "\fIEmulates a USB interface\&. \fP"
.ti -1c
.RI "word \fBget_packet_id\fP ()"
.br
.RI "\fIGets a packet id\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class is implemented to be able to assemble a USB Frame to send to the host PC\&. 
.PP
Definition at line 15 of file Emulation_Device_Implementation\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void EMULATION_DEVICE::emulate_usb ()"

.PP
Emulates a USB interface\&. The emulation loop Do this forever\&.
.PP
Poll the USB Line
.PP
Check to see if a report needs to be sent, using the idle rate\&.
.PP
Needs to send
.PP
Create a valid random USB Frame
.PP
Poll the USB Line
.PP
If we need to send\&.
.PP
Send the report\&. and reset the timer\&.
.PP
Poll the USB line
.PP
No need to send anymore\&. 
.PP
Definition at line 109 of file Emulation_Device_Implementation\&.cpp\&.
.SS "word EMULATION_DEVICE::get_packet_id ()"

.PP
Gets a packet id\&. This returns the packet id 
.PP
Definition at line 104 of file Emulation_Device_Implementation\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Arduino Medical Assitive Device Base Station from the source code\&.
