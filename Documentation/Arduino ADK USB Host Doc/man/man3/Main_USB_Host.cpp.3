.TH "Arduino_ADK_USB_HOST/Main_USB_Host.cpp" 3 "Thu Aug 15 2013" "Version 1.0" "Arduino Medical Assitive Device Base Station" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Arduino_ADK_USB_HOST/Main_USB_Host.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./System_Defines/Includes\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsetup\fP ()"
.br
.ti -1c
.RI "void \fBloop\fP ()"
.br
.ti -1c
.RI "void \fBinit\fP ()"
.br
.ti -1c
.RI "void \fBconfigure_device\fP (\fBNVRAM\fP *nvram_object)"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void configure_device (\fBNVRAM\fP *nvram_object)"
This function configures the device with \fBNVRAM\fP stored parameters\&. 
.PP
\fBParameters:\fP
.RS 4
\fInvram_object\fP - \fBNVRAM\fP 
.RE
.PP
Buttons setup
.PP
LED setup
.PP
Set RF data\&. 
.PP
Definition at line 13 of file Main_USB_Host\&.cpp\&.
.SS "void init ()"

.SS "void loop ()"
If the emulation device is chosen\&. Start the emulation process\&.
.PP
Cast to the emulation device pointer\&.
.PP
Cast to the USB device pointer
.PP
Something went wrong\&. 
.PP
Definition at line 178 of file Main_USB_Host\&.cpp\&.
.SS "int main (void)"
This is the main function that does the work on the uC\&. It returns 0 if successfully terminated, and 1 is there is an error\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 53 of file Main_USB_Host\&.cpp\&.
.SS "void setup ()"
Clear the interrupt flag, to void all interrupts coming in during the setup phase
.PP
Loads the settings saved in \fBNVRAM\fP Also loads the commands to the cached mem\&.
.PP
Reset and reboot device\&.
.PP
Wait 5sec to check the pin\&.
.PP
Check choice (default = Emulation)\&.
.PP
1 - Emulation 0 - Real USB device
.PP
Defines the generic pointer (EMULATION)\&. This is where we setup the object pointer\&.
.PP
Define the generic pointer (USB HOST DEVICE)\&. This is where we setup the object pointer\&.
.PP
If none of the above, reset the device\&.
.PP
Timer is initialized to keep track of the CPU idle time\&.
.PP
USB Initialize the buffers and structures pertaining to the USB device class\&.
.PP
This allows the USB device to re-enumerate in the PC OS\&.
.PP
Check memory integrity
.PP
Resume interrupt handling 
.PP
Definition at line 66 of file Main_USB_Host\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Arduino Medical Assitive Device Base Station from the source code\&.
