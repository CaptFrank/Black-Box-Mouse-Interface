.TH "Arduino_ADK_USB_HOST/System_Defines/Main_Defines.h" 3 "Thu Aug 15 2013" "Version 1.0" "Arduino Medical Assitive Device Base Station" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Arduino_ADK_USB_HOST/System_Defines/Main_Defines.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'System_Defines/Includes\&.h'\fP
.br
\fC#include 'Sensor_Parser_Implementation/Network_Protocol\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMOUSE_REPORT\fP"
.br
.RI "\fIONLY ONE OF THE FOLLOWING SHOULD BE CHOSEN! \fP"
.ti -1c
.RI "#define \fBWATCH_ONLY\fP"
.br
.RI "\fIThis determines the sensor data maps\&. \fP"
.ti -1c
.RI "#define \fBMAX_ROUTER_ERRORS\fP   10"
.br
.RI "\fIEnvironment wide defines\&. \fP"
.ti -1c
.RI "#define \fBMIN_BATT_LEVEL\fP   100"
.br
.ti -1c
.RI "#define \fBGOOD\fP   1"
.br
.ti -1c
.RI "#define \fBFIVE_SECONDS\fP   5000"
.br
.ti -1c
.RI "#define \fBEMPTY\fP   0"
.br
.ti -1c
.RI "#define \fBMAX_WARNINGS\fP   10"
.br
.ti -1c
.RI "#define \fBMAX_INFO\fP   INFINITY"
.br
.ti -1c
.RI "#define \fBMAX_DEBUG\fP   INFINITY"
.br
.ti -1c
.RI "#define \fBMAX_MEMORY\fP   10"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPACKET_DECODER\fP \fBpacket_decoder\fP (\fBpacket_handlers\fP)"
.br
.RI "\fIDefine a \fBPACKET_DECODER\fP object\&. \fP"
.ti -1c
.RI "word \fBmemory_check\fP ()"
.br
.ti -1c
.RI "void \fBerror\fP (void *line, void *function)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "word \fB__bss_end\fP"
.br
.RI "\fIexternal reference to the end of the BSS for use in checking memory consumption \fP"
.ti -1c
.RI "EEPROM \fBeeprom\fP"
.br
.RI "\fIDefine an EEPROM object\&. \fP"
.ti -1c
.RI "\fBNVRAM\fP \fBnvram\fP"
.br
.RI "\fIDefine an \fBNVRAM\fP object\&. \fP"
.ti -1c
.RI "\fBWATCHDOG\fP \fBwatchdog\fP"
.br
.RI "\fIDefine an \fBWATCHDOG\fP object\&. \fP"
.ti -1c
.RI "\fBPACKET_PARSER\fP \fBpacket_parser\fP"
.br
.RI "\fIDefine an \fBPACKET_PARSER\fP object\&. \fP"
.ti -1c
.RI "\fBUSB_STATE_MACHINE\fP \fBusb_state_machine\fP"
.br
.RI "\fIDefine a common \fBUSB_STATE_MACHINE\fP object\&. \fP"
.ti -1c
.RI "struct packet_handler \fBpacket_handlers\fP [13]"
.br
.RI "\fIDefine a packet decoder function table\&. \fP"
.ti -1c
.RI "void * \fBgeneric_pointer\fP"
.br
.RI "\fIA generic pointer to the chosen object\&. \fP"
.ti -1c
.RI "byte \fBbase_station_address\fP"
.br
.RI "\fIThe base station address\&. \fP"
.ti -1c
.RI "byte \fBbase_station_mode\fP"
.br
.RI "\fIThe base station state machine mode\&. \fP"
.ti -1c
.RI "byte \fBemulation_chosen\fP"
.br
.RI "\fIDefine which device was chosen\&. \fP"
.ti -1c
.RI "byte \fBusb_device_chosen\fP"
.br
.ti -1c
.RI "\fBrouter_nmap_info_t\fP * \fBnmap\fP"
.br
.RI "\fICached structs to keep\&. \fP"
.ti -1c
.RI "\fBsensor_configs_t\fP * \fBconfigs\fP"
.br
.ti -1c
.RI "\fBremote_sensor_data_t\fP * \fBdata\fP"
.br
.ti -1c
.RI "void(* \fBreset_device\fP )(void)=0"
.br
.RI "\fIReset the device\&. \fP"
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define EMPTY   0"

.PP
Definition at line 39 of file Main_Defines\&.h\&.
.SS "#define FIVE_SECONDS   5000"

.PP
Definition at line 38 of file Main_Defines\&.h\&.
.SS "#define GOOD   1"

.PP
Definition at line 37 of file Main_Defines\&.h\&.
.SS "#define MAX_DEBUG   INFINITY"

.PP
Definition at line 43 of file Main_Defines\&.h\&.
.SS "#define MAX_INFO   INFINITY"

.PP
Definition at line 42 of file Main_Defines\&.h\&.
.SS "#define MAX_MEMORY   10"

.PP
Definition at line 44 of file Main_Defines\&.h\&.
.SS "#define MAX_ROUTER_ERRORS   10"

.PP
Environment wide defines\&. 
.PP
Definition at line 35 of file Main_Defines\&.h\&.
.SS "#define MAX_WARNINGS   10"

.PP
Definition at line 41 of file Main_Defines\&.h\&.
.SS "#define MIN_BATT_LEVEL   100"

.PP
Definition at line 36 of file Main_Defines\&.h\&.
.SS "#define MOUSE_REPORT"

.PP
ONLY ONE OF THE FOLLOWING SHOULD BE CHOSEN! 
.PP
Definition at line 25 of file Main_Defines\&.h\&.
.SS "#define WATCH_ONLY"

.PP
This determines the sensor data maps\&. 
.PP
Definition at line 30 of file Main_Defines\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void error (void *line, void *function)"
This function is accessible throughout the code repo it allows the functions to return and terminate the process as an error\&. Print if defined
.PP
Disconnect the device\&. 
.PP
Definition at line 30 of file Main_Defines\&.cpp\&.
.SS "word memory_check ()"
This does a memory check of the whole system, and checks to see how much free mem there is\&. 
.PP
Definition at line 19 of file Main_Defines\&.cpp\&.
.SS "\fBPACKET_DECODER\fP packet_decoder (\fBpacket_handlers\fP)"

.PP
Define a \fBPACKET_DECODER\fP object\&. 
.SH "Variable Documentation"
.PP 
.SS "word __bss_end"

.PP
external reference to the end of the BSS for use in checking memory consumption This file contains all of the device DEFINE macros, and also includes all of the libraries that are needed to be references\&. All of the structures and classes are also built by default in this header file\&. 
.SS "byte base_station_address"

.PP
The base station address\&. 
.PP
Definition at line 112 of file Main_Defines\&.h\&.
.SS "byte base_station_mode"

.PP
The base station state machine mode\&. 
.PP
Definition at line 115 of file Main_Defines\&.h\&.
.SS "\fBsensor_configs_t\fP* configs"

.PP
Definition at line 123 of file Main_Defines\&.h\&.
.SS "\fBremote_sensor_data_t\fP* data"

.PP
Definition at line 124 of file Main_Defines\&.h\&.
.SS "EEPROM eeprom"

.PP
Define an EEPROM object\&. 
.PP
Definition at line 51 of file Main_Defines\&.h\&.
.SS "byte emulation_chosen"

.PP
Define which device was chosen\&. 
.PP
Definition at line 118 of file Main_Defines\&.h\&.
.SS "void* generic_pointer"

.PP
A generic pointer to the chosen object\&. 
.PP
Definition at line 109 of file Main_Defines\&.h\&.
.SS "\fBrouter_nmap_info_t\fP* nmap"

.PP
Cached structs to keep\&. 
.PP
Definition at line 122 of file Main_Defines\&.h\&.
.SS "\fBCOMMAND_INTERPRETER\fP command_interpreter & nvram"

.PP
Define an \fBNVRAM\fP object\&. Define a \fBCOMMAND_INTERPRETER\fP object\&. 
.PP
Definition at line 54 of file Main_Defines\&.h\&.
.SS "struct packet_handler packet_handlers[13]"
\fBInitial value:\fP
.PP
.nf
= {

            

            
            {PACKET_ANY,        WATCHDOG::reset,                &watchdog},

            
            {ROUTER_ACK,        PACKET_PARSER::parse,           &packet_parser},
            {ROUTER_HEARTBEAT,  PACKET_PARSER::parse,           &packet_parser},
            {ROUTER_STATUS,     PACKET_PARSER::parse,           &packet_parser},
            {ROUTER_NMAP,       PACKET_PARSER::parse,           &packet_parser},
            {ROUTER_CONFIG,     PACKET_PARSER::parse,           &packet_parser},
            {SENSOR_ENABLE,     PACKET_PARSER::parse,           &packet_parser},
            {SENSOR_CONFIGS,    PACKET_PARSER::parse,           &packet_parser},
            {SENSOR_DATA,       PACKET_PARSER::parse,           &packet_parser},
            {SENSOR_NUMBER,     PACKET_PARSER::parse,           &packet_parser},

            
            {USB_DEVICE_CMD,   PACKET_PARSER::parse,            &packet_parser},

            
            {ROUTER_DEBUG,     PACKET_PARSER::parse,            &packet_parser},
            {ERROR_MSG,        PACKET_PARSER::parse,            &packet_parser}
    }
.fi
.PP
Define a packet decoder function table\&. 
.PP
Definition at line 69 of file Main_Defines\&.h\&.
.SS "\fBPACKET_PARSER\fP packet_parser"

.PP
Define an \fBPACKET_PARSER\fP object\&. 
.PP
Definition at line 60 of file Main_Defines\&.h\&.
.SS "void(* reset_device)(void)=0"

.PP
Reset the device\&. 
.PP
Definition at line 131 of file Main_Defines\&.h\&.
.SS "byte usb_device_chosen"

.PP
Definition at line 119 of file Main_Defines\&.h\&.
.SS "\fBUSB_STATE_MACHINE\fP usb_state_machine"

.PP
Define a common \fBUSB_STATE_MACHINE\fP object\&. 
.PP
Definition at line 66 of file Main_Defines\&.h\&.
.SS "\fBWATCHDOG\fP watchdog"

.PP
Define an \fBWATCHDOG\fP object\&. 
.PP
Definition at line 57 of file Main_Defines\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Arduino Medical Assitive Device Base Station from the source code\&.
