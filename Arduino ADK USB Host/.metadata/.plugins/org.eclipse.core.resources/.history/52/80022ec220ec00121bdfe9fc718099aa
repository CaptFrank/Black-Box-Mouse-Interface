
#include "State_Machine_Implementation.h"


///////////// EMULATION DEVICE \\\\\\\\\\\\\\\\

//! PWR_ON STATE
STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE(){
	CURRENT_STATE = STATE_MACHINE.PWR_ON_STATE;
}

//! PREVIOUS STATE
void STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::go_back_one_state(){
	CURRENT_STATE --;
}

//! RUN_ERROR STATE
void STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::go_error_hang(){
	CURRENT_STATE = STATE_MACHINE.RUN_ERROR_STATE;
}

//! REBOOT_ERROR STATE
void STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::go_error_reboot(){
	CURRENT_STATE = STATE_MACHINE.REBOOT_ERROR_STATE;
}

//! Set NEW STATE
void STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::set_state(byte state){
	CURRENT_STATE = state;
}

//! NEXT STATE
void STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::step_next_state(){
	CURRENT_STATE ++;
}

//! GET CURRENT STATE
byte STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::return_current_state(){
	return CURRENT_STATE;
}

//! GET NEXT STATE
byte STATE_MACHINE::EMULATION_DEVICE_STATE_MACHINE::return_next_state(){
	byte next_state = CURRENT_STATE ++;
	return next_state;
}

//////////////// USB HOST DEVICE \\\\\\\\\\\\\\\\

//! PWR_ON STATE
STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE(){
	CURRENT_STATE = STATE_MACHINE.PWR_ON_STATE;
}

//! PREVIOUS STATE
void STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::go_back_one_state(){
	CURRENT_STATE --;
}

//! RUN_ERROR STATE
void STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::go_error_hang(){
	CURRENT_STATE = STATE_MACHINE.RUN_ERROR_STATE;
}

//! REBOOT_ERROR STATE
void STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::go_error_reboot(){
	CURRENT_STATE = STATE_MACHINE.REBOOT_ERROR_STATE;
}

//! Set NEW STATE
void STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::set_state(byte state){
	CURRENT_STATE = state;
}

//! NEXT STATE
void STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::step_next_state(){
	CURRENT_STATE ++;
}

//! GET CURRENT STATE
byte STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::return_current_state(){
	return CURRENT_STATE;
}

//! GET NEXT STATE
byte STATE_MACHINE::USB_HOST_DEVICE_STATE_MACHINE::return_next_state(){
	byte next_state = CURRENT_STATE ++;
	return next_state;
}
