/*
 * Debug_LED_Function.cpp
 *
 *  Created on: Jul 13, 2013
 *      Author: francispapineau
 */

#include "Debug_LED_Function.h"
#include "../System_Defines/Main_Defines.h"

void DEBUG_API::set_error_type(String error_type){

}

void DEBUG_API::set_led_error_code(byte error_code){

}

void DEBUG_API::set_error_code(byte error_code){

}

void DEBUG_API::reboot_cause_error(byte cause){

	String string = "[%s]: Rebooting Device. ERR: %d, LED: %h";
	print_error(debug_api.DEBUG_STRINGS[cause],
			debug_api.DEBUG_CODES[cause],
			debug_api.DEBUG_LED_CODES[cause],
			&string);
	reset_device();
}

void DEBUG_API::print_error(String error_type, byte error_code, byte error_led_code, String* string){

	if(debug_set){
		char temp_string[sizeof(string) + 11];
			sprintf(temp_string, string->c_str(),
					error_type, error_code, error_led_code);
			DEBUG_PRINTLN(temp_string);
	}
}

void DEBUG_API::print_error(byte error_index, String* string){

	if(debug_set){
		char temp_string[sizeof(string) + 11];
			sprintf(temp_string, string->c_str(),
					debug_api.DEBUG_STRINGS[error_index],
					debug_api.DEBUG_CODES[error_index],
					debug_api.DEBUG_LED_CODES[error_index]);
			DEBUG_PRINTLN(temp_string);
	}
}

void DEBUG_API::enable_debug(){
	debug_set = true;
}

void DEBUG_API::disable_debug(){
	debug_set = false;
}

byte DEBUG_API::get_number_of(String debug_type){


}

void DEBUG_API::set_threshold(byte threshold){

}

void DEBUG_API::check(){

}



