/*
 * Main_Defines.h
 *
 *  Created on: Jul 10, 2013
 *      Author: francispapineau
 */

#ifndef MAIN_DEFINES_H_
#define MAIN_DEFINES_H_

#include <Arduino.h>
#include <EEPROM/EEPROM.h>

#include "../Emulation_Device_Implementation/Emulation_Device_Implementation.h"
#include "../Debug_API/Debug_LED_Function.h"
#include "../USB_HID_API/usbconfig.h"
#include "../USB_HID_API/usbdrv.h"

/**
 * This file contains all of the device DEFINE macros, and
 * also includes all of the libraries that are needed to
 * be references. All of the structures and classes are also
 * built by default in this header file.
 **/

extern "C" {
//! external reference to the end of the BSS for use in checking memory consumption
	extern word __bss_end;
}

 //#define DEVELOPMENT						//! In Windows Development Mode
 #define DEBUG								//! Serial Debug Define
 #define USER_INPUT							//! User Button Define
 #define DEBUG_LEDs							//! Debug LEDs Define

 //! ONLY ONE OF THE FOLLOWING SHOULD BE CHOSEN!
 #define MOUSE_REPORT						//! Only send the Mouse USB report
 //#define JOYSTICK_REPORT					//! Only send the joystick USB report
 //#define MOUSE_JOYSTICK_REPORT			//! Send both joystick and mouse USb reports

#define FIVE_SECONDS		5000
#define EMPTY				0
#define MAX_WARNINGS 		10
#define MAX_INFO			INFINITY
#define MAX_DEBUG			INFINITY
#define MAX_MEMORY			1

#define NUMBER_OF_LEDS		4

//! Serial device map
//!	- Serial 1 - USB Endpoint - PC COMS
//! - Serial 2 - USB Host 	  - RF COMS
//! - Serial 3 - Debug		  - FTDI COMS

 //! Normal Output Stream
#define SERIAL				Serial1
#define PRINT				Serial1.print	//! Serial API
#define PRINTLN				Serial1.println //! Serial API

//! RF output stream
#define RF_SERIAL			Serial2
#define RF_PRINT			Serial2.print
#define RF_PRINTLN			Serial2.println

//! Debug Output Stream
 #ifdef DEBUG
	#define DEBUG_SERIAL	Serial3
	#define DEBUG_PRINT 	Serial3.print 	//! Serial API
	#define DEBUG_PRINTLN 	Serial3.println //! Serial API

	debug_code_struct_t debug_api;
	error_type_counts_t error_type_counts;
 #endif

 //! User Button Activation
 //! TODO - ADD THE PORT MAP

 #ifdef USER_INPUT
	#define SELECT_BUTTON_1	2				//! PORT MAPS
	#define SELECT_BUTTON_2 3
 #endif

 //! Debug LEDs Activation
 //! TODO - ADD THE PORT MAP

 #ifdef DEBUG_LEDs
	#define DBG_LED_1		3				//! PORT MAPS
	#define DBG_LED_2		4
	#define DBG_LED_3		5
	#define DBG_LED_4		6
 #endif

//! If we are developing and the env is not set properly
#ifdef DEVELOPMENT
	typedef unsigned char byte;					//! Redefine the 8 bit values
	typedef unsigned char prog_byte;
	typedef char int8_t;
	typedef int  int16_t;
#endif

	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~ OBJECT DEFINITIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	//! Define an EEPROM object.
	EEPROM eeprom;

	//! Define an nvram object
	NVRAM nvram;

	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~ VARIABLE DEFINITIONS ~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	//! A generic pointer to the chosen object.
	void* generic_pointer;

	//! The base station address
	byte base_station_address;

	//! The base station state machine mode
	byte base_station_mode;

	//! Define which device was chosen.
	byte emulation_chosen;
	byte usb_device_chosen;

	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~ FUNCTION DEFINITIONS ~~~~~~~~~~~~~~~~~~~~~~~~
	//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	//! Reset the device.
	void(*reset_device) (void) = 0; //declare reset function @ address 0

	/**
	 * This does a memory check of the whole system, and checks
	 * to see how much free mem there is.
	 */
	word memory_check(){
		word freemem;
		freemem = ((word)&freemem) - ((word)&__bss_end);
		return freemem;
	}

#endif /* MAIN_DEFINES_H_ */
