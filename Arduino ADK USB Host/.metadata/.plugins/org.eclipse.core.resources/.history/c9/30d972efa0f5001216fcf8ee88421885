/*
 * Command_Interpreter.cpp
 *
 *  Created on: Jul 25, 2013
 *      Author: francispapineau
 */

#include "Command_Interpreter.h"

//! Sends a command
void COMMAND_INTERPRETER::_send_cmd(byte packet_id, byte packet_ver, void *buf){

	String* buffer = (String*) buf;

	if(packet_id == USB_DEVICE_CMD){
		//! First send the address
		RF_SERIAL.print(buffer->c_str()[0]);

		//! Second send the command
		RF_SERIAL.print(buffer->substring(1).c_str());
	}
}

//! Execute a command from a sensor or router
void COMMAND_INTERPRETER::_execute_command(byte command){

	switch(command){

		case 1: // Wake up the router

		case 2: // Wake up a sensor

		case 3: // Power off router

		case 4: // Power off sensor

		case 5: // Power on router

		case 6: // Power on sensor

		case 7: // Pause router

		case 8: // Pause sensor

		case 9:

		case 10:

		case 11:

		case 12:

		case 13:
	default:
		break;
	}
}

//! The public send command method
void COMMAND_INTERPRETER::send_cmd(void *arg, byte packet_id, byte packet_ver, void *buf){

	//! Process String
	((COMMAND_INTERPRETER*)arg)->_send_cmd(packet_id, packet_ver, buf);
}


