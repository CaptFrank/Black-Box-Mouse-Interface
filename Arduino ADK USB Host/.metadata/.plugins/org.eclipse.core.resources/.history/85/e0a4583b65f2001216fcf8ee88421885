/*
 * Sensor_Parser.c
 *
 *  Created on: Jul 13, 2013
 *      Author: francispapineau
 */

#include "Sensor_Parser.h"
#include "../JSON_API/json_arduino.h"

PARSER::PARSER(){
	packet_type = 0;
    packet = "<DEFAULT>";
    token_list = nullptr;
}
void* PARSER::allocate_packet_memory(void* packet){
	return malloc(sizeof(packet));
}

void PARSER::free_memory(void* memory){

	if(token_list->length != NULL)
		release_token_list(token_list);

	free(memory);
}

void PARSER::parse_packet(String packet){

	byte packet_type = packet.c_str()[1];
	char* token_list_str = packet.substring(3, (packet.length() - 2));

	create_token_list(MAX_TOKENS);

	// Convert JSON String to a Hashmap of Key/Value Pairs
	json_to_token_list(token_list_str, token_list);

	parse(token_list, packet_type);

}

union packet* PARSER::get_parsed_handle(){


}

bool PARSER::check_packet_integrity(String packet){

	byte length = packet.c_str()[2];
	byte header = packet.c_str()[0];
	byte tail = packet.c_str()[3];

	if(packet == NULL)
		if(length < 1)
			if(header != "+++")
				if(tail != "***")
					return false;

	this->packet = packet;
	this->packet_type = packet.c_str()[1];

	return true;
}

void PARSER::parse(token_list_t token_list, byte packet_type){

}
