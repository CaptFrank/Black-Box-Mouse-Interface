<VisualMicro>
  <Program Name="sketch" Ext=".ino" Location="Z:\Black-Box-Mouse-Interface\Arduino ADK USB Host\Arduino_ADK_USB_HOST\ArduinoSketchVersion1\sketch">
    <Platform Name="arduino10x" Package="arduino" Platform="avr" Architecture="avr">
      <Board Name="mega2560" Description="Arduino Mega 2560 or Mega ADK" CoreFolder="C:\Program Files (x86)\Arduino\hardware\arduino\cores\arduino" VariantFullPath="C:\Program Files (x86)\Arduino\hardware\arduino\variants\mega" McuIdePath="C:\Program Files (x86)\Arduino\" McuSketchBookPath="C:\Users\francis-ccs\Documents\Arduino" name="Arduino Mega 2560 or Mega ADK" upload.protocol="wiring" upload.maximum_size="258048" upload.speed="115200" bootloader.low_fuses="0xFF" bootloader.high_fuses="0xD8" bootloader.extended_fuses="0xFD" bootloader.path="stk500v2" bootloader.file="stk500boot_v2_mega2560.hex" bootloader.unlock_bits="0x3F" bootloader.lock_bits="0x0F" build.mcu="atmega2560" build.f_cpu="16000000L" build.core="arduino" build.variant="mega" runtime.ide.path="C:\Program Files (x86)\Arduino\" build.system.path="C:\Program Files (x86)\Arduino\hardware\arduino\system" runtime.ide.version="105" originalid="mega2560" build.core.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\cores\arduino" build.core.parentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\cores" build.core.coresparentfolder.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino" vm.core.include="arduino.h" vm.boardsource.path="C:\Program Files (x86)\Arduino\hardware\arduino" vm.platformname.name="avr" build.arch="AVR" ide.hint="Arduino 0023 and 1.0.x Ide" ide.location.key="Arduino" ide.location.ide.winreg="Arduino 1.0.x Application" ide.location.sketchbook.winreg="Arduino 1.0.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.location.sketchbook.default="%MYDOCUMENTS%\arduino" ide.location.preferences="%VM_APPDATA_ROAMING%\arduino\preferences.txt" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.platformswithoutpackage="true" ide.sketchfolder.platforms.exclude="avr" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionLTEQ="149" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" vm.debug="true" software="ARDUINO" ide.appid="arduino10x" location.sketchbook="C:\Users\francis-ccs\Documents\Arduino" build.variant.vmresolved="C:\Program Files (x86)\Arduino\hardware\arduino\variants\mega" />
    </Platform>
    <Compile CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" ReportDisassembledView="1" ReportDetailedMemoryUsage="1" BuildPath="C:\Users\francis-ccs\AppData\Local\VMicro\Arduino\Builds\sketch\mega2560" IsDebugStart="1" SketchName="sketch" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 80;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;VM_DEBUG_AUTO_REPORTING;VM_DEBUG_READ_DIGITAL_PORTS 1;VM_DEBUG_READ_ANALOG_PINS 1;VM_DEBUG_MEM_CHECK 1;" IncludesDebug="1" IsCompiled="1" />
    <Debug DebugEnabled="1" DebugMode="Full" AutoReportAnalogPins="1" AutoReportDigitalPins="1" AutoReportFreeMemory="1" LocalPort="COM3" LocalPortSpeed="9600" RemotePortSpeed="9600" RemotePort="Serial" EnableBreak="1" RemotePortTransport="HardwareSerial" PinRX="0" PinTX="1" StartUpMessage="Starting Debug" StartUpPause="1" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="sketch.ino, line 135 character 1" Id="51fbd383-3d10-45fd-9e23-0c72664e2bc0" Enabled="1" Message="{millis()}" MessageTextType="2" PreProcessedMessage="{0}" Condition="millis()&gt;0 || millis()&gt;1" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\sketch.ino" FileLine="135" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="250" HitCountType="4" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='51fbd383-3d10-45fd-9e23-0c72664e2bc0'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>128		#ifdef DEBUG_LEDs
129	    	        debug_api.set_leds(MEMORY_ERROR);
130		#endif
131			error((void*)__LINE__, (void*)__func__);
132	    }
133	}
134	
--&gt;135	void loop(){
136	
137		#ifdef DEBUG
138	      // We are only testing the setup part of the running process
139	      DEBUG_SERIAL.println("DEBUGGING STARTUP PROCEDURE");
140		  delay(ONE_SECOND);
141		  //abort();
142		#endif
143	
144		//! If the emulation device is chosen.
</Source>
        <MessageVariables>
          <MessageVariable Name="millis()" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="2" Name="sketch.ino, line 160 character 1" Id="f177e209-6a56-49be-83a6-290c463de119" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\sketch.ino" FileLine="160" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='f177e209-6a56-49be-83a6-290c463de119'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>153	
154		}else if(usb_device_chosen){
155		#ifdef DEBUG
156			DEBUG_SERIAL.println("STARTING USB DEVICE ENGINE");
157			delay(ONE_SECOND);
158		#endif
159			//! Cast to the USB device pointer
--&gt;160			((USB_DEVICE*) generic_pointer)-&gt;run_usb();
161			
162		}else{ //! Something went wrong.
163		#ifdef DEBUG_LEDs
164			debug_api.set_leds(FATAL_ERROR);
165		#endif
166			error((void*)__LINE__, (void*)__func__);
167		}
168	}
169	
</Source>
      </BreakPoint>
      <BreakPoint Index="3" Name="USB_Device_Implementation.cpp, line 114 character 1" Id="d20b6bfb-c750-4782-9228-d617473f8725" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="114" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='d20b6bfb-c750-4782-9228-d617473f8725'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>107		 */
108		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
109	
110		/**
111		 * Powers on the router.
112		 */
113		buffer[0] = POWERON_ROUTER;
--&gt;114		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
115	
116		/**
117		 * Move the state machine to the ID wakeup router section of the
118		 * state machine.
119		 *
120		 * FROM: 	NETWORK_SETUP
121		 * TO: 		NETWORK_ID_REQUEST
122		 */
123		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="USB_Device_Implementation.cpp, line 138 character 1" Id="b2408515-17ce-4d30-ad14-6b87b72574fc" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="138" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='b2408515-17ce-4d30-ad14-6b87b72574fc'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>131		 *    to continue with the setup process.
132		 *
133		 *	-&gt; power_on_router();
134		 * 	 1. send_wakeup_router();
135		 * 	 	-&gt; receive_router_ack();
136	 	 */
137		buffer[0] = WAKEUP_ROUTER;
--&gt;138		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
139	
140		/**
141		 * Makes sure that the device is ok and running
142		 */
143		buffer[0] = PING_ROUTER;
144		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
145	
146		/**
147		 * Move the state machine to the network status request state.
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="USB_Device_Implementation.cpp, line 173 character 1" Id="cca24ccf-740d-4411-b743-03d004a5d4c7" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="173" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='cca24ccf-740d-4411-b743-03d004a5d4c7'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>166		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
167	
168		/**
169		 * Gets the router configs. [Radio Bytes Config]
170		 * Gets the radio configuration registers in the transceiver.
171		 */
172		buffer[0] = REQUEST_ROUTER_CONFIG;
--&gt;173		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
174	
175		/**
176		 * Save them to eeprom address 200dec.
177		 */
178		this-&gt;_command_interpreter-&gt;nvram_object-&gt;savex((byte)200,
179				(byte)8, (void*)&amp;this-&gt;_packet_parser-&gt;_radio_configs);
180	
181		/**
182		 * Move the state machine to the network map request.
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="USB_Device_Implementation.cpp, line 203 character 1" Id="7d87c5e4-9a0c-4663-a837-aa2ba137606d" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="203" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='7d87c5e4-9a0c-4663-a837-aa2ba137606d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>196		 * -&gt; This function needs a message before a watchdog timer expires
197		 *    to continue with the setup process.
198		 *
199		 *		3. request_net_map();
200		 *			-&gt; receive_nmap();
201		 */
202		buffer[0] = REQUEST_NMAP;
--&gt;203		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
204	
205		/**
206		 * Move the state machine to the network sensor configs.
207		 *
208		 * FROM:	NETWORK_MAP_REQUEST
209		 * TO: 		NETWORK_SENSOR_CONFIGS
210		 */
211		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
212	
</Source>
      </BreakPoint>
      <BreakPoint Index="7" Name="USB_Device_Implementation.cpp, line 238 character 1" Id="2ef6a88f-1605-4ba3-b0f5-45c7924bac55" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="238" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='2ef6a88f-1605-4ba3-b0f5-45c7924bac55'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>231		 * This function polls for an enabled sensor report generated by the
232		 * user on the router, by selecting which sensor is enabled.
233		 *
234		 * 		5. get_user_enable_sensors();
235		 * 			-&gt; set_flags(byte sensor flags);
236		 */
237		buffer[0] = REQUEST_SENSOR_ENABLE;
--&gt;238		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
239	
240	//#ifdef DEBUG
241	//	char* text;
242	//	DEBUG_SERIAL.print("[NOTICE]: The following sensors are active:\n");
243	//	for(register byte i = 0; i &lt; sizeof(byte); i ++){
244	//		byte bitmask = 0b11111110;
245	//		bitmask = ~bitmask;
246	//		byte sensor =  this-&gt;_packet_parser._en_sensors &amp; bitmask;
247	//		if(sensor &gt; 0)
</Source>
      </BreakPoint>
      <BreakPoint Index="8" Name="Command_Interpreter.cpp, line 70 character 1" Id="c774a867-c718-4d19-9971-1230a374e54c" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="70" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='c774a867-c718-4d19-9971-1230a374e54c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>63				command_send = (byte*)this-&gt;nvram_object-&gt;nv._poweroff_sensor;
64				command_send[5] = command[1];
65				_send_check(ROUTER_HEARTBEAT, command_send, sizeof(this-&gt;nvram_object-&gt;nv._poweroff_sensor));
66				break;
67	
68	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
69	
--&gt;70			case POWERON_ROUTER: 	// Power on router
71				_send_check(ROUTER_HEARTBEAT, (byte*)this-&gt;nvram_object-&gt;nv._power_on_router,
72						sizeof(this-&gt;nvram_object-&gt;nv._power_on_router));
73				break;
74	
75			case POWERON_SENSOR: 	// Power on sensor
76				command_send = (byte*)this-&gt;nvram_object-&gt;nv._power_on_sensor;
77				command_send[5] = command[1];
78				_send_check(ROUTER_HEARTBEAT, command_send, sizeof(this-&gt;nvram_object-&gt;nv._power_on_sensor));
79				break;
</Source>
      </BreakPoint>
      <BreakPoint Index="9" Name="Command_Interpreter.cpp, line 24 character 1" Id="e08a4f70-5c96-4845-a9b2-b5e372e71c8e" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="24" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='e08a4f70-5c96-4845-a9b2-b5e372e71c8e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>17	
18	/**
19	 * buf. definition: [Target Address][Command Predicate][Arg 1][Arg 2]
20	 */
21	//! Sends a command
22	void COMMAND_PARSER::_send_cmd(byte packet_id, void *buf){
23	
--&gt;24		byte* buffer = (byte*) buf;
25		
26		
27		byte c = buffer[0];
28		
29		if(packet_id == USB_DEVICE_CMD){
30	
31			//! Construct a command
32			_send_command(buffer);
33		}
</Source>
      </BreakPoint>
      <BreakPoint Index="10" Name="USB_Device_Implementation.cpp, line 152 character 1" Id="df0b0b5e-2b1a-44f0-82ae-fba3f355e48c" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="152" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='df0b0b5e-2b1a-44f0-82ae-fba3f355e48c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>145	
146		/**
147		 * Move the state machine to the network status request state.
148		 *
149		 * FROM:	NETWORK_ID_REQUEST
150		 * TO: 		NETWORK_STATUS_REQUEST
151		 */
--&gt;152		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
153	
154		/**
155		 * This function requests a router status structure. It sends a
156		 * request command and polls until a structure is returned or when a
157		 * watchdog timer exhaust is caught.
158		 *
159		 * -&gt; This function needs an ack before a watchdog timer expires
160		 *    to continue with the setup process.
161		 *
</Source>
      </BreakPoint>
      <BreakPoint Index="11" Name="USB_Device_Implementation.cpp, line 123 character 1" Id="7f64e4f3-b4d4-4f38-9860-79c9b4a671f4" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="123" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='7f64e4f3-b4d4-4f38-9860-79c9b4a671f4'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>116		/**
117		 * Move the state machine to the ID wakeup router section of the
118		 * state machine.
119		 *
120		 * FROM: 	NETWORK_SETUP
121		 * TO: 		NETWORK_ID_REQUEST
122		 */
--&gt;123		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
124	
125		/** This function sends_a wakeup call to the router and makes the
126		 * router go into command polling mode. This allows the router to
127		 * only react to the commands sent by the ground station and not the
128		 * sensors.
129		 *
130		 * -&gt; This function needs an ack before a watchdog timer expires
131		 *    to continue with the setup process.
132		 *
</Source>
      </BreakPoint>
      <BreakPoint Index="12" Name="USB_Device_Implementation.cpp, line 108 character 1" Id="e547a7a1-c12e-4df0-976d-bd31618bc00e" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="108" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='e547a7a1-c12e-4df0-976d-bd31618bc00e'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>101		
102		/**
103		 * Start the state machine and push the state to start.
104		 *
105		 * FROM: 	LOCAL_DEVICE_SETUP
106		 * TO: 		NETWORK_SETUP
107		 */
--&gt;108		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
109	
110		/**
111		 * Powers on the router.
112		 */
113		buffer[0] = POWERON_ROUTER;
114		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
115	
116		/**
117		 * Move the state machine to the ID wakeup router section of the
</Source>
      </BreakPoint>
      <BreakPoint Index="13" Name="USB_Device_Implementation.cpp, line 144 character 1" Id="643c3d9a-f512-4628-ae0d-a4bd1e7a6c61" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="144" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='643c3d9a-f512-4628-ae0d-a4bd1e7a6c61'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>137		buffer[0] = WAKEUP_ROUTER;
138		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
139	
140		/**
141		 * Makes sure that the device is ok and running
142		 */
143		buffer[0] = PING_ROUTER;
--&gt;144		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
145	
146		/**
147		 * Move the state machine to the network status request state.
148		 *
149		 * FROM:	NETWORK_ID_REQUEST
150		 * TO: 		NETWORK_STATUS_REQUEST
151		 */
152		this-&gt;_command_interpreter-&gt;usb_state_machine-&gt;move_state_forward();
153	
</Source>
      </BreakPoint>
      <BreakPoint Index="14" Name="USB_Device_Implementation.cpp, line 166 character 1" Id="7712bd04-01e3-4b68-a166-3a5906f60721" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\usb_device_implementation.cpp" FileLine="166" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='7712bd04-01e3-4b68-a166-3a5906f60721'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>159		 * -&gt; This function needs an ack before a watchdog timer expires
160		 *    to continue with the setup process.
161		 *
162	  	 * 	  2. request_router_status();
163	  	 * 	  	-&gt; receive_router_status();
164		 */
165		buffer[0] = REQUEST_ROUTER_STATUS;
--&gt;166		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
167	
168		/**
169		 * Gets the router configs. [Radio Bytes Config]
170		 * Gets the radio configuration registers in the transceiver.
171		 */
172		buffer[0] = REQUEST_ROUTER_CONFIG;
173		this-&gt;_command_interpreter-&gt;send_cmd(USB_DEVICE_CMD, (void*) &amp;buffer);
174	
175		/**
</Source>
      </BreakPoint>
      <BreakPoint Index="15" Name="Command_Interpreter.cpp, line 29 character 1" Id="e2d272af-af40-48bd-bee8-0fdf8f6d3ec7" Enabled="1" Message="{packet_id}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="29" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='e2d272af-af40-48bd-bee8-0fdf8f6d3ec7'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>22	void COMMAND_PARSER::_send_cmd(byte packet_id, void *buf){
23	
24		byte* buffer = (byte*) buf;
25		
26		
27		byte c = buffer[0];
28		
--&gt;29		if(packet_id == USB_DEVICE_CMD){
30	
31			//! Construct a command
32			_send_command(buffer);
33		}
34	}
35	
36	//! Execute a command from a sensor or router
37	void COMMAND_PARSER::_send_command(byte* command){
38	
</Source>
        <MessageVariables>
          <MessageVariable Name="packet_id" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="16" Name="Command_Interpreter.cpp, line 27 character 1" Id="43a48767-80b5-47eb-88ef-9b5054de1c77" Enabled="1" Message="{c}" MessageTextType="2" PreProcessedMessage="{0}" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="27" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='43a48767-80b5-47eb-88ef-9b5054de1c77'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="0">
        <Source>20	 */
21	//! Sends a command
22	void COMMAND_PARSER::_send_cmd(byte packet_id, void *buf){
23	
24		byte* buffer = (byte*) buf;
25		
26		
--&gt;27		byte c = buffer[0];
28		
29		if(packet_id == USB_DEVICE_CMD){
30	
31			//! Construct a command
32			_send_command(buffer);
33		}
34	}
35	
36	//! Execute a command from a sensor or router
</Source>
        <MessageVariables>
          <MessageVariable Name="c" Index="1" />
        </MessageVariables>
      </BreakPoint>
      <BreakPoint Index="17" Name="Command_Interpreter.cpp, line 187 character 1" Id="89d59fc5-cb3b-458b-8f74-9f855511d0fb" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="187" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='89d59fc5-cb3b-458b-8f74-9f855511d0fb'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>180	//! Sends and checks a received message.
181	void COMMAND_PARSER::_send_check(byte receive_packet_id, byte* command, int len){
182	
183		RF_SERIAL.write(command, len);
184	
185		while(true){
186			//! Gets a packet to the handler and parser.
--&gt;187			this-&gt;packet_decoder-&gt;poll();
188	
189			//! Check to see the packet id
190			if(packet_decoder-&gt;_packet_id == receive_packet_id)
191				return;
192	
193			//! If the packet is timed out.
194			else if ((millis() - packet_decoder-&gt;_last_received) &gt; PACKET_TIMEOUT)
195			#ifdef DEBUG_LEDs
196				debug_api.set_leds(FATAL_ERROR);
</Source>
      </BreakPoint>
      <BreakPoint Index="18" Name="Command_Interpreter.cpp, line 194 character 1" Id="52f00ed1-6669-406d-b268-b58f1af8fdbd" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="194" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='52f00ed1-6669-406d-b268-b58f1af8fdbd'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>187			this-&gt;packet_decoder-&gt;poll();
188	
189			//! Check to see the packet id
190			if(packet_decoder-&gt;_packet_id == receive_packet_id)
191				return;
192	
193			//! If the packet is timed out.
--&gt;194			else if ((millis() - packet_decoder-&gt;_last_received) &gt; PACKET_TIMEOUT)
195			#ifdef DEBUG_LEDs
196				debug_api.set_leds(FATAL_ERROR);
197			#endif
198				usb_state_machine-&gt;move_state_to_network_error(usb_state_machine-&gt;current_state);
199				error((void*)__LINE__, (void*)__func__);
200		}
201	}
</Source>
      </BreakPoint>
      <BreakPoint Index="19" Name="Command_Interpreter.cpp, line 199 character 1" Id="76de42a2-cb42-4750-ab38-a64b3dcd9d87" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="z:\black-box-mouse-interface\arduino adk usb host\arduino_adk_usb_host\arduinosketchversion1\sketch\command_interpreter.cpp" FileLine="199" FileColumn="1" FunctionName="" FunctionLineOffset="1" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="AVR GCC" LocationType="3" Tag="&lt;vmbp Id='76de42a2-cb42-4750-ab38-a64b3dcd9d87'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>192	
193			//! If the packet is timed out.
194			else if ((millis() - packet_decoder-&gt;_last_received) &gt; PACKET_TIMEOUT)
195			#ifdef DEBUG_LEDs
196				debug_api.set_leds(FATAL_ERROR);
197			#endif
198				usb_state_machine-&gt;move_state_to_network_error(usb_state_machine-&gt;current_state);
--&gt;199				error((void*)__LINE__, (void*)__func__);
200		}
201	}
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>